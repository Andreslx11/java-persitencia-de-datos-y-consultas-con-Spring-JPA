# Esto es un comentario
# IMPORTANE las varibles locales ${identificador_variable_local}
# esto es lo que hace para vincular la base de datos
# en este caso la que creamos en postgresql alura_series
spring.application.name=screenmatch
#spring.datasource.url=jdbc:postgresql://${DB_HOST}/${DB_NAME}
spring.datasource.url=jdbc:postgresql://${DB_HOST}/${DB_NAME}
# el username de postgresql por defecto es postgres
#spring.datasource.username=DB_USER
spring.datasource.username=${DB_USER}
# la clave que le dimos app postgresql
spring.datasource.password=${DB_PASSWORD}
# El driver que se instalo en la dependencia
spring.datasource.driver-class-name=org.postgresql.Driver
#Hibernate es un framework de persistencia de datos que implementa la especificación JPA.
#JPA es la API estándar de Java para la persistencia de datos, que define las interfaces y
# anotaciones que los desarrolladores pueden utilizar. Al utilizar Hibernate, los desarrolladores
# se benefician de las características avanzadas que ofrece el framework, mientras que siguen
# las convenciones y buenas prácticas definidas por la especificación JPA. Tanto Hibernate como
# JPA simplifican enormemente el proceso de interacción entre la aplicación Java y la base
# de datos, permitiendo a los desarrolladores centrarse más en la lógica de negocio y menos
# en la complejidad de la persistencia de datos.
hibernate.dialect=org.hibernate.dialect.HSQLDialect
# Esto es para indicar a JPA que tiene permiso de ver si existe un cambio en la app y que refleje eso
# en la base de datos
spring.jpa.hibernate.ddl-auto=update